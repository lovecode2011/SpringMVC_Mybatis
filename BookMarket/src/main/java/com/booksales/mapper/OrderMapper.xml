<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.booksales.dao.OrderMapper">
  <resultMap id="BaseResultMap" type="com.booksales.model.Order">
    <id column="OrderId" jdbcType="INTEGER" property="orderid" />
    <result column="UserId" jdbcType="INTEGER" property="userid" />
    <result column="Sum" jdbcType="DECIMAL" property="sum" />
    <result column="ReceiverId" jdbcType="INTEGER" property="receiverid" />
    <result column="OrderStates" jdbcType="CHAR" property="orderstates" />
    <result column="LogisticsStates" jdbcType="CHAR" property="logisticsstates" />
    <result column="PayWay" jdbcType="CHAR" property="payway" />
    <result column="OrderTime" jdbcType="TIMESTAMP" property="ordertime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    OrderId, UserId, Sum, ReceiverId, OrderStates, LogisticsStates, PayWay, OrderTime
  </sql>
  <select id="selectByExample" parameterType="com.booksales.model.OrderExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from bsorder
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from bsorder
    where OrderId = #{orderid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from bsorder
    where OrderId = #{orderid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.booksales.model.OrderExample">
    delete from bsorder
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.booksales.model.Order">
    insert into bsorder (OrderId, UserId, Sum, 
      ReceiverId, OrderStates, LogisticsStates, 
      PayWay, OrderTime)
    values (#{orderid,jdbcType=INTEGER}, #{userid,jdbcType=INTEGER}, #{sum,jdbcType=DECIMAL}, 
      #{receiverid,jdbcType=INTEGER}, #{orderstates,jdbcType=CHAR}, #{logisticsstates,jdbcType=CHAR}, 
      #{payway,jdbcType=CHAR}, #{ordertime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.booksales.model.Order">
    insert into bsorder
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="orderid != null">
        OrderId,
      </if>
      <if test="userid != null">
        UserId,
      </if>
      <if test="sum != null">
        Sum,
      </if>
      <if test="receiverid != null">
        ReceiverId,
      </if>
      <if test="orderstates != null">
        OrderStates,
      </if>
      <if test="logisticsstates != null">
        LogisticsStates,
      </if>
      <if test="payway != null">
        PayWay,
      </if>
      <if test="ordertime != null">
        OrderTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="orderid != null">
        #{orderid,jdbcType=INTEGER},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="sum != null">
        #{sum,jdbcType=DECIMAL},
      </if>
      <if test="receiverid != null">
        #{receiverid,jdbcType=INTEGER},
      </if>
      <if test="orderstates != null">
        #{orderstates,jdbcType=CHAR},
      </if>
      <if test="logisticsstates != null">
        #{logisticsstates,jdbcType=CHAR},
      </if>
      <if test="payway != null">
        #{payway,jdbcType=CHAR},
      </if>
      <if test="ordertime != null">
        #{ordertime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.booksales.model.OrderExample" resultType="java.lang.Integer">
    select count(*) from bsorder
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update bsorder
    <set>
      <if test="record.orderid != null">
        OrderId = #{record.orderid,jdbcType=INTEGER},
      </if>
      <if test="record.userid != null">
        UserId = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.sum != null">
        Sum = #{record.sum,jdbcType=DECIMAL},
      </if>
      <if test="record.receiverid != null">
        ReceiverId = #{record.receiverid,jdbcType=INTEGER},
      </if>
      <if test="record.orderstates != null">
        OrderStates = #{record.orderstates,jdbcType=CHAR},
      </if>
      <if test="record.logisticsstates != null">
        LogisticsStates = #{record.logisticsstates,jdbcType=CHAR},
      </if>
      <if test="record.payway != null">
        PayWay = #{record.payway,jdbcType=CHAR},
      </if>
      <if test="record.ordertime != null">
        OrderTime = #{record.ordertime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update bsorder
    set OrderId = #{record.orderid,jdbcType=INTEGER},
      UserId = #{record.userid,jdbcType=INTEGER},
      Sum = #{record.sum,jdbcType=DECIMAL},
      ReceiverId = #{record.receiverid,jdbcType=INTEGER},
      OrderStates = #{record.orderstates,jdbcType=CHAR},
      LogisticsStates = #{record.logisticsstates,jdbcType=CHAR},
      PayWay = #{record.payway,jdbcType=CHAR},
      OrderTime = #{record.ordertime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.booksales.model.Order">
    update bsorder
    <set>
      <if test="userid != null">
        UserId = #{userid,jdbcType=INTEGER},
      </if>
      <if test="sum != null">
        Sum = #{sum,jdbcType=DECIMAL},
      </if>
      <if test="receiverid != null">
        ReceiverId = #{receiverid,jdbcType=INTEGER},
      </if>
      <if test="orderstates != null">
        OrderStates = #{orderstates,jdbcType=CHAR},
      </if>
      <if test="logisticsstates != null">
        LogisticsStates = #{logisticsstates,jdbcType=CHAR},
      </if>
      <if test="payway != null">
        PayWay = #{payway,jdbcType=CHAR},
      </if>
      <if test="ordertime != null">
        OrderTime = #{ordertime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where OrderId = #{orderid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.booksales.model.Order">
    update bsorder
    set UserId = #{userid,jdbcType=INTEGER},
      Sum = #{sum,jdbcType=DECIMAL},
      ReceiverId = #{receiverid,jdbcType=INTEGER},
      OrderStates = #{orderstates,jdbcType=CHAR},
      LogisticsStates = #{logisticsstates,jdbcType=CHAR},
      PayWay = #{payway,jdbcType=CHAR},
      OrderTime = #{ordertime,jdbcType=TIMESTAMP}
    where OrderId = #{orderid,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.booksales.model.Order">
    <id column="OrderId" jdbcType="INTEGER" property="orderid" />
    <result column="UserId" jdbcType="INTEGER" property="userid" />
    <result column="Sum" jdbcType="DECIMAL" property="sum" />
    <result column="ReceiverId" jdbcType="INTEGER" property="receiverid" />
    <result column="OrderStates" jdbcType="CHAR" property="orderstates" />
    <result column="LogisticsStates" jdbcType="CHAR" property="logisticsstates" />
    <result column="PayWay" jdbcType="CHAR" property="payway" />
    <result column="OrderTime" jdbcType="TIMESTAMP" property="ordertime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    OrderId, UserId, Sum, ReceiverId, OrderStates, LogisticsStates, PayWay, OrderTime
  </sql>
  <select id="selectByExample" parameterType="com.booksales.model.OrderExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from bsorder
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from bsorder
    where OrderId = #{orderid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from bsorder
    where OrderId = #{orderid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.booksales.model.OrderExample">
    delete from bsorder
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.booksales.model.Order">
    insert into bsorder (OrderId, UserId, Sum, 
      ReceiverId, OrderStates, LogisticsStates, 
      PayWay, OrderTime)
    values (#{orderid,jdbcType=INTEGER}, #{userid,jdbcType=INTEGER}, #{sum,jdbcType=DECIMAL}, 
      #{receiverid,jdbcType=INTEGER}, #{orderstates,jdbcType=CHAR}, #{logisticsstates,jdbcType=CHAR}, 
      #{payway,jdbcType=CHAR}, #{ordertime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.booksales.model.Order">
    insert into bsorder
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="orderid != null">
        OrderId,
      </if>
      <if test="userid != null">
        UserId,
      </if>
      <if test="sum != null">
        Sum,
      </if>
      <if test="receiverid != null">
        ReceiverId,
      </if>
      <if test="orderstates != null">
        OrderStates,
      </if>
      <if test="logisticsstates != null">
        LogisticsStates,
      </if>
      <if test="payway != null">
        PayWay,
      </if>
      <if test="ordertime != null">
        OrderTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="orderid != null">
        #{orderid,jdbcType=INTEGER},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="sum != null">
        #{sum,jdbcType=DECIMAL},
      </if>
      <if test="receiverid != null">
        #{receiverid,jdbcType=INTEGER},
      </if>
      <if test="orderstates != null">
        #{orderstates,jdbcType=CHAR},
      </if>
      <if test="logisticsstates != null">
        #{logisticsstates,jdbcType=CHAR},
      </if>
      <if test="payway != null">
        #{payway,jdbcType=CHAR},
      </if>
      <if test="ordertime != null">
        #{ordertime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.booksales.model.OrderExample" resultType="java.lang.Integer">
    select count(*) from bsorder
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update bsorder
    <set>
      <if test="record.orderid != null">
        OrderId = #{record.orderid,jdbcType=INTEGER},
      </if>
      <if test="record.userid != null">
        UserId = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.sum != null">
        Sum = #{record.sum,jdbcType=DECIMAL},
      </if>
      <if test="record.receiverid != null">
        ReceiverId = #{record.receiverid,jdbcType=INTEGER},
      </if>
      <if test="record.orderstates != null">
        OrderStates = #{record.orderstates,jdbcType=CHAR},
      </if>
      <if test="record.logisticsstates != null">
        LogisticsStates = #{record.logisticsstates,jdbcType=CHAR},
      </if>
      <if test="record.payway != null">
        PayWay = #{record.payway,jdbcType=CHAR},
      </if>
      <if test="record.ordertime != null">
        OrderTime = #{record.ordertime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update bsorder
    set OrderId = #{record.orderid,jdbcType=INTEGER},
      UserId = #{record.userid,jdbcType=INTEGER},
      Sum = #{record.sum,jdbcType=DECIMAL},
      ReceiverId = #{record.receiverid,jdbcType=INTEGER},
      OrderStates = #{record.orderstates,jdbcType=CHAR},
      LogisticsStates = #{record.logisticsstates,jdbcType=CHAR},
      PayWay = #{record.payway,jdbcType=CHAR},
      OrderTime = #{record.ordertime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.booksales.model.Order">
    update bsorder
    <set>
      <if test="userid != null">
        UserId = #{userid,jdbcType=INTEGER},
      </if>
      <if test="sum != null">
        Sum = #{sum,jdbcType=DECIMAL},
      </if>
      <if test="receiverid != null">
        ReceiverId = #{receiverid,jdbcType=INTEGER},
      </if>
      <if test="orderstates != null">
        OrderStates = #{orderstates,jdbcType=CHAR},
      </if>
      <if test="logisticsstates != null">
        LogisticsStates = #{logisticsstates,jdbcType=CHAR},
      </if>
      <if test="payway != null">
        PayWay = #{payway,jdbcType=CHAR},
      </if>
      <if test="ordertime != null">
        OrderTime = #{ordertime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where OrderId = #{orderid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.booksales.model.Order">
    update bsorder
    set UserId = #{userid,jdbcType=INTEGER},
      Sum = #{sum,jdbcType=DECIMAL},
      ReceiverId = #{receiverid,jdbcType=INTEGER},
      OrderStates = #{orderstates,jdbcType=CHAR},
      LogisticsStates = #{logisticsstates,jdbcType=CHAR},
      PayWay = #{payway,jdbcType=CHAR},
      OrderTime = #{ordertime,jdbcType=TIMESTAMP}
    where OrderId = #{orderid,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.booksales.model.Order">
    <id column="OrderId" jdbcType="INTEGER" property="orderid" />
    <result column="UserId" jdbcType="INTEGER" property="userid" />
    <result column="Sum" jdbcType="DECIMAL" property="sum" />
    <result column="ReceiverId" jdbcType="INTEGER" property="receiverid" />
    <result column="OrderStates" jdbcType="CHAR" property="orderstates" />
    <result column="LogisticsStates" jdbcType="CHAR" property="logisticsstates" />
    <result column="PayWay" jdbcType="CHAR" property="payway" />
    <result column="OrderTime" jdbcType="TIMESTAMP" property="ordertime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    OrderId, UserId, Sum, ReceiverId, OrderStates, LogisticsStates, PayWay, OrderTime
  </sql>
  <select id="selectByExample" parameterType="com.booksales.model.OrderExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from bsorder
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from bsorder
    where OrderId = #{orderid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from bsorder
    where OrderId = #{orderid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.booksales.model.OrderExample">
    delete from bsorder
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.booksales.model.Order">
    insert into bsorder (OrderId, UserId, Sum, 
      ReceiverId, OrderStates, LogisticsStates, 
      PayWay, OrderTime)
    values (#{orderid,jdbcType=INTEGER}, #{userid,jdbcType=INTEGER}, #{sum,jdbcType=DECIMAL}, 
      #{receiverid,jdbcType=INTEGER}, #{orderstates,jdbcType=CHAR}, #{logisticsstates,jdbcType=CHAR}, 
      #{payway,jdbcType=CHAR}, #{ordertime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.booksales.model.Order">
    insert into bsorder
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="orderid != null">
        OrderId,
      </if>
      <if test="userid != null">
        UserId,
      </if>
      <if test="sum != null">
        Sum,
      </if>
      <if test="receiverid != null">
        ReceiverId,
      </if>
      <if test="orderstates != null">
        OrderStates,
      </if>
      <if test="logisticsstates != null">
        LogisticsStates,
      </if>
      <if test="payway != null">
        PayWay,
      </if>
      <if test="ordertime != null">
        OrderTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="orderid != null">
        #{orderid,jdbcType=INTEGER},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="sum != null">
        #{sum,jdbcType=DECIMAL},
      </if>
      <if test="receiverid != null">
        #{receiverid,jdbcType=INTEGER},
      </if>
      <if test="orderstates != null">
        #{orderstates,jdbcType=CHAR},
      </if>
      <if test="logisticsstates != null">
        #{logisticsstates,jdbcType=CHAR},
      </if>
      <if test="payway != null">
        #{payway,jdbcType=CHAR},
      </if>
      <if test="ordertime != null">
        #{ordertime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.booksales.model.OrderExample" resultType="java.lang.Integer">
    select count(*) from bsorder
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update bsorder
    <set>
      <if test="record.orderid != null">
        OrderId = #{record.orderid,jdbcType=INTEGER},
      </if>
      <if test="record.userid != null">
        UserId = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.sum != null">
        Sum = #{record.sum,jdbcType=DECIMAL},
      </if>
      <if test="record.receiverid != null">
        ReceiverId = #{record.receiverid,jdbcType=INTEGER},
      </if>
      <if test="record.orderstates != null">
        OrderStates = #{record.orderstates,jdbcType=CHAR},
      </if>
      <if test="record.logisticsstates != null">
        LogisticsStates = #{record.logisticsstates,jdbcType=CHAR},
      </if>
      <if test="record.payway != null">
        PayWay = #{record.payway,jdbcType=CHAR},
      </if>
      <if test="record.ordertime != null">
        OrderTime = #{record.ordertime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update bsorder
    set OrderId = #{record.orderid,jdbcType=INTEGER},
      UserId = #{record.userid,jdbcType=INTEGER},
      Sum = #{record.sum,jdbcType=DECIMAL},
      ReceiverId = #{record.receiverid,jdbcType=INTEGER},
      OrderStates = #{record.orderstates,jdbcType=CHAR},
      LogisticsStates = #{record.logisticsstates,jdbcType=CHAR},
      PayWay = #{record.payway,jdbcType=CHAR},
      OrderTime = #{record.ordertime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.booksales.model.Order">
    update bsorder
    <set>
      <if test="userid != null">
        UserId = #{userid,jdbcType=INTEGER},
      </if>
      <if test="sum != null">
        Sum = #{sum,jdbcType=DECIMAL},
      </if>
      <if test="receiverid != null">
        ReceiverId = #{receiverid,jdbcType=INTEGER},
      </if>
      <if test="orderstates != null">
        OrderStates = #{orderstates,jdbcType=CHAR},
      </if>
      <if test="logisticsstates != null">
        LogisticsStates = #{logisticsstates,jdbcType=CHAR},
      </if>
      <if test="payway != null">
        PayWay = #{payway,jdbcType=CHAR},
      </if>
      <if test="ordertime != null">
        OrderTime = #{ordertime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where OrderId = #{orderid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.booksales.model.Order">
    update bsorder
    set UserId = #{userid,jdbcType=INTEGER},
      Sum = #{sum,jdbcType=DECIMAL},
      ReceiverId = #{receiverid,jdbcType=INTEGER},
      OrderStates = #{orderstates,jdbcType=CHAR},
      LogisticsStates = #{logisticsstates,jdbcType=CHAR},
      PayWay = #{payway,jdbcType=CHAR},
      OrderTime = #{ordertime,jdbcType=TIMESTAMP}
    where OrderId = #{orderid,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.booksales.model.Order">
    <id column="OrderId" jdbcType="INTEGER" property="orderid" />
    <result column="UserId" jdbcType="INTEGER" property="userid" />
    <result column="Sum" jdbcType="DECIMAL" property="sum" />
    <result column="ReceiverId" jdbcType="INTEGER" property="receiverid" />
    <result column="OrderStates" jdbcType="CHAR" property="orderstates" />
    <result column="LogisticsStates" jdbcType="CHAR" property="logisticsstates" />
    <result column="PayWay" jdbcType="CHAR" property="payway" />
    <result column="OrderTime" jdbcType="TIMESTAMP" property="ordertime" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from bsorder
    where OrderId = #{orderid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.booksales.model.Order">
    insert into bsorder (OrderId, UserId, Sum, 
      ReceiverId, OrderStates, LogisticsStates, 
      PayWay, OrderTime)
    values (#{orderid,jdbcType=INTEGER}, #{userid,jdbcType=INTEGER}, #{sum,jdbcType=DECIMAL}, 
      #{receiverid,jdbcType=INTEGER}, #{orderstates,jdbcType=CHAR}, #{logisticsstates,jdbcType=CHAR}, 
      #{payway,jdbcType=CHAR}, #{ordertime,jdbcType=TIMESTAMP})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.booksales.model.Order">
    update bsorder
    set UserId = #{userid,jdbcType=INTEGER},
      Sum = #{sum,jdbcType=DECIMAL},
      ReceiverId = #{receiverid,jdbcType=INTEGER},
      OrderStates = #{orderstates,jdbcType=CHAR},
      LogisticsStates = #{logisticsstates,jdbcType=CHAR},
      PayWay = #{payway,jdbcType=CHAR},
      OrderTime = #{ordertime,jdbcType=TIMESTAMP}
    where OrderId = #{orderid,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select OrderId, UserId, Sum, ReceiverId, OrderStates, LogisticsStates, PayWay, OrderTime
    from bsorder
    where OrderId = #{orderid,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select OrderId, UserId, Sum, ReceiverId, OrderStates, LogisticsStates, PayWay, OrderTime
    from bsorder
  </select>
</mapper>