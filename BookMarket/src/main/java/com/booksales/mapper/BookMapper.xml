<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.booksales.dao.BookMapper">
  <resultMap id="BaseResultMap" type="com.booksales.model.Book">
    <id column="BookId" jdbcType="INTEGER" property="bookid" />
    <result column="BookName" jdbcType="VARCHAR" property="bookname" />
    <result column="Author" jdbcType="VARCHAR" property="author" />
    <result column="Publish" jdbcType="VARCHAR" property="publish" />
    <result column="ISBN" jdbcType="VARCHAR" property="isbn" />
    <result column="PublishDate" jdbcType="VARCHAR" property="publishdate" />
    <result column="Picture" jdbcType="VARCHAR" property="picture" />
    <result column="Repertory" jdbcType="CHAR" property="repertory" />
    <result column="Price" jdbcType="DECIMAL" property="price" />
    <result column="Stock" jdbcType="INTEGER" property="stock" />
    <result column="Sales" jdbcType="INTEGER" property="sales" />
    <result column="BookClassId" jdbcType="INTEGER" property="bookclassid" />
    <result column="IsRecommend" jdbcType="CHAR" property="isrecommend" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.booksales.model.Book">
    <result column="Intro" jdbcType="LONGVARCHAR" property="intro" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    BookId, BookName, Author, Publish, ISBN, PublishDate, Picture, Repertory, Price, 
    Stock, Sales, BookClassId, IsRecommend
  </sql>
  <sql id="Blob_Column_List">
    Intro
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.booksales.model.BookExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from bsbook
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.booksales.model.BookExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from bsbook
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from bsbook
    where BookId = #{bookid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from bsbook
    where BookId = #{bookid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.booksales.model.BookExample">
    delete from bsbook
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.booksales.model.Book">
    insert into bsbook (BookId, BookName, Author, 
      Publish, ISBN, PublishDate, 
      Picture, Repertory, Price, 
      Stock, Sales, BookClassId, 
      IsRecommend, Intro)
    values (#{bookid,jdbcType=INTEGER}, #{bookname,jdbcType=VARCHAR}, #{author,jdbcType=VARCHAR}, 
      #{publish,jdbcType=VARCHAR}, #{isbn,jdbcType=VARCHAR}, #{publishdate,jdbcType=VARCHAR}, 
      #{picture,jdbcType=VARCHAR}, #{repertory,jdbcType=CHAR}, #{price,jdbcType=DECIMAL}, 
      #{stock,jdbcType=INTEGER}, #{sales,jdbcType=INTEGER}, #{bookclassid,jdbcType=INTEGER}, 
      #{isrecommend,jdbcType=CHAR}, #{intro,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.booksales.model.Book">
    insert into bsbook
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="bookid != null">
        BookId,
      </if>
      <if test="bookname != null">
        BookName,
      </if>
      <if test="author != null">
        Author,
      </if>
      <if test="publish != null">
        Publish,
      </if>
      <if test="isbn != null">
        ISBN,
      </if>
      <if test="publishdate != null">
        PublishDate,
      </if>
      <if test="picture != null">
        Picture,
      </if>
      <if test="repertory != null">
        Repertory,
      </if>
      <if test="price != null">
        Price,
      </if>
      <if test="stock != null">
        Stock,
      </if>
      <if test="sales != null">
        Sales,
      </if>
      <if test="bookclassid != null">
        BookClassId,
      </if>
      <if test="isrecommend != null">
        IsRecommend,
      </if>
      <if test="intro != null">
        Intro,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="bookid != null">
        #{bookid,jdbcType=INTEGER},
      </if>
      <if test="bookname != null">
        #{bookname,jdbcType=VARCHAR},
      </if>
      <if test="author != null">
        #{author,jdbcType=VARCHAR},
      </if>
      <if test="publish != null">
        #{publish,jdbcType=VARCHAR},
      </if>
      <if test="isbn != null">
        #{isbn,jdbcType=VARCHAR},
      </if>
      <if test="publishdate != null">
        #{publishdate,jdbcType=VARCHAR},
      </if>
      <if test="picture != null">
        #{picture,jdbcType=VARCHAR},
      </if>
      <if test="repertory != null">
        #{repertory,jdbcType=CHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="stock != null">
        #{stock,jdbcType=INTEGER},
      </if>
      <if test="sales != null">
        #{sales,jdbcType=INTEGER},
      </if>
      <if test="bookclassid != null">
        #{bookclassid,jdbcType=INTEGER},
      </if>
      <if test="isrecommend != null">
        #{isrecommend,jdbcType=CHAR},
      </if>
      <if test="intro != null">
        #{intro,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.booksales.model.BookExample" resultType="java.lang.Integer">
    select count(*) from bsbook
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update bsbook
    <set>
      <if test="record.bookid != null">
        BookId = #{record.bookid,jdbcType=INTEGER},
      </if>
      <if test="record.bookname != null">
        BookName = #{record.bookname,jdbcType=VARCHAR},
      </if>
      <if test="record.author != null">
        Author = #{record.author,jdbcType=VARCHAR},
      </if>
      <if test="record.publish != null">
        Publish = #{record.publish,jdbcType=VARCHAR},
      </if>
      <if test="record.isbn != null">
        ISBN = #{record.isbn,jdbcType=VARCHAR},
      </if>
      <if test="record.publishdate != null">
        PublishDate = #{record.publishdate,jdbcType=VARCHAR},
      </if>
      <if test="record.picture != null">
        Picture = #{record.picture,jdbcType=VARCHAR},
      </if>
      <if test="record.repertory != null">
        Repertory = #{record.repertory,jdbcType=CHAR},
      </if>
      <if test="record.price != null">
        Price = #{record.price,jdbcType=DECIMAL},
      </if>
      <if test="record.stock != null">
        Stock = #{record.stock,jdbcType=INTEGER},
      </if>
      <if test="record.sales != null">
        Sales = #{record.sales,jdbcType=INTEGER},
      </if>
      <if test="record.bookclassid != null">
        BookClassId = #{record.bookclassid,jdbcType=INTEGER},
      </if>
      <if test="record.isrecommend != null">
        IsRecommend = #{record.isrecommend,jdbcType=CHAR},
      </if>
      <if test="record.intro != null">
        Intro = #{record.intro,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update bsbook
    set BookId = #{record.bookid,jdbcType=INTEGER},
      BookName = #{record.bookname,jdbcType=VARCHAR},
      Author = #{record.author,jdbcType=VARCHAR},
      Publish = #{record.publish,jdbcType=VARCHAR},
      ISBN = #{record.isbn,jdbcType=VARCHAR},
      PublishDate = #{record.publishdate,jdbcType=VARCHAR},
      Picture = #{record.picture,jdbcType=VARCHAR},
      Repertory = #{record.repertory,jdbcType=CHAR},
      Price = #{record.price,jdbcType=DECIMAL},
      Stock = #{record.stock,jdbcType=INTEGER},
      Sales = #{record.sales,jdbcType=INTEGER},
      BookClassId = #{record.bookclassid,jdbcType=INTEGER},
      IsRecommend = #{record.isrecommend,jdbcType=CHAR},
      Intro = #{record.intro,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update bsbook
    set BookId = #{record.bookid,jdbcType=INTEGER},
      BookName = #{record.bookname,jdbcType=VARCHAR},
      Author = #{record.author,jdbcType=VARCHAR},
      Publish = #{record.publish,jdbcType=VARCHAR},
      ISBN = #{record.isbn,jdbcType=VARCHAR},
      PublishDate = #{record.publishdate,jdbcType=VARCHAR},
      Picture = #{record.picture,jdbcType=VARCHAR},
      Repertory = #{record.repertory,jdbcType=CHAR},
      Price = #{record.price,jdbcType=DECIMAL},
      Stock = #{record.stock,jdbcType=INTEGER},
      Sales = #{record.sales,jdbcType=INTEGER},
      BookClassId = #{record.bookclassid,jdbcType=INTEGER},
      IsRecommend = #{record.isrecommend,jdbcType=CHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.booksales.model.Book">
    update bsbook
    <set>
      <if test="bookname != null">
        BookName = #{bookname,jdbcType=VARCHAR},
      </if>
      <if test="author != null">
        Author = #{author,jdbcType=VARCHAR},
      </if>
      <if test="publish != null">
        Publish = #{publish,jdbcType=VARCHAR},
      </if>
      <if test="isbn != null">
        ISBN = #{isbn,jdbcType=VARCHAR},
      </if>
      <if test="publishdate != null">
        PublishDate = #{publishdate,jdbcType=VARCHAR},
      </if>
      <if test="picture != null">
        Picture = #{picture,jdbcType=VARCHAR},
      </if>
      <if test="repertory != null">
        Repertory = #{repertory,jdbcType=CHAR},
      </if>
      <if test="price != null">
        Price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="stock != null">
        Stock = #{stock,jdbcType=INTEGER},
      </if>
      <if test="sales != null">
        Sales = #{sales,jdbcType=INTEGER},
      </if>
      <if test="bookclassid != null">
        BookClassId = #{bookclassid,jdbcType=INTEGER},
      </if>
      <if test="isrecommend != null">
        IsRecommend = #{isrecommend,jdbcType=CHAR},
      </if>
      <if test="intro != null">
        Intro = #{intro,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where BookId = #{bookid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.booksales.model.Book">
    update bsbook
    set BookName = #{bookname,jdbcType=VARCHAR},
      Author = #{author,jdbcType=VARCHAR},
      Publish = #{publish,jdbcType=VARCHAR},
      ISBN = #{isbn,jdbcType=VARCHAR},
      PublishDate = #{publishdate,jdbcType=VARCHAR},
      Picture = #{picture,jdbcType=VARCHAR},
      Repertory = #{repertory,jdbcType=CHAR},
      Price = #{price,jdbcType=DECIMAL},
      Stock = #{stock,jdbcType=INTEGER},
      Sales = #{sales,jdbcType=INTEGER},
      BookClassId = #{bookclassid,jdbcType=INTEGER},
      IsRecommend = #{isrecommend,jdbcType=CHAR},
      Intro = #{intro,jdbcType=LONGVARCHAR}
    where BookId = #{bookid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.booksales.model.Book">
    update bsbook
    set BookName = #{bookname,jdbcType=VARCHAR},
      Author = #{author,jdbcType=VARCHAR},
      Publish = #{publish,jdbcType=VARCHAR},
      ISBN = #{isbn,jdbcType=VARCHAR},
      PublishDate = #{publishdate,jdbcType=VARCHAR},
      Picture = #{picture,jdbcType=VARCHAR},
      Repertory = #{repertory,jdbcType=CHAR},
      Price = #{price,jdbcType=DECIMAL},
      Stock = #{stock,jdbcType=INTEGER},
      Sales = #{sales,jdbcType=INTEGER},
      BookClassId = #{bookclassid,jdbcType=INTEGER},
      IsRecommend = #{isrecommend,jdbcType=CHAR}
    where BookId = #{bookid,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.booksales.model.Book">
    <id column="BookId" jdbcType="INTEGER" property="bookid" />
    <result column="BookName" jdbcType="VARCHAR" property="bookname" />
    <result column="Author" jdbcType="VARCHAR" property="author" />
    <result column="Publish" jdbcType="VARCHAR" property="publish" />
    <result column="ISBN" jdbcType="VARCHAR" property="isbn" />
    <result column="PublishDate" jdbcType="VARCHAR" property="publishdate" />
    <result column="Picture" jdbcType="VARCHAR" property="picture" />
    <result column="Repertory" jdbcType="CHAR" property="repertory" />
    <result column="Price" jdbcType="DECIMAL" property="price" />
    <result column="Stock" jdbcType="INTEGER" property="stock" />
    <result column="Sales" jdbcType="INTEGER" property="sales" />
    <result column="BookClassId" jdbcType="INTEGER" property="bookclassid" />
    <result column="IsRecommend" jdbcType="CHAR" property="isrecommend" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.booksales.model.Book">
    <result column="Intro" jdbcType="LONGVARCHAR" property="intro" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    BookId, BookName, Author, Publish, ISBN, PublishDate, Picture, Repertory, Price, 
    Stock, Sales, BookClassId, IsRecommend
  </sql>
  <sql id="Blob_Column_List">
    Intro
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.booksales.model.BookExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from bsbook
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.booksales.model.BookExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from bsbook
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from bsbook
    where BookId = #{bookid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from bsbook
    where BookId = #{bookid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.booksales.model.BookExample">
    delete from bsbook
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.booksales.model.Book">
    insert into bsbook (BookId, BookName, Author, 
      Publish, ISBN, PublishDate, 
      Picture, Repertory, Price, 
      Stock, Sales, BookClassId, 
      IsRecommend, Intro)
    values (#{bookid,jdbcType=INTEGER}, #{bookname,jdbcType=VARCHAR}, #{author,jdbcType=VARCHAR}, 
      #{publish,jdbcType=VARCHAR}, #{isbn,jdbcType=VARCHAR}, #{publishdate,jdbcType=VARCHAR}, 
      #{picture,jdbcType=VARCHAR}, #{repertory,jdbcType=CHAR}, #{price,jdbcType=DECIMAL}, 
      #{stock,jdbcType=INTEGER}, #{sales,jdbcType=INTEGER}, #{bookclassid,jdbcType=INTEGER}, 
      #{isrecommend,jdbcType=CHAR}, #{intro,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.booksales.model.Book">
    insert into bsbook
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="bookid != null">
        BookId,
      </if>
      <if test="bookname != null">
        BookName,
      </if>
      <if test="author != null">
        Author,
      </if>
      <if test="publish != null">
        Publish,
      </if>
      <if test="isbn != null">
        ISBN,
      </if>
      <if test="publishdate != null">
        PublishDate,
      </if>
      <if test="picture != null">
        Picture,
      </if>
      <if test="repertory != null">
        Repertory,
      </if>
      <if test="price != null">
        Price,
      </if>
      <if test="stock != null">
        Stock,
      </if>
      <if test="sales != null">
        Sales,
      </if>
      <if test="bookclassid != null">
        BookClassId,
      </if>
      <if test="isrecommend != null">
        IsRecommend,
      </if>
      <if test="intro != null">
        Intro,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="bookid != null">
        #{bookid,jdbcType=INTEGER},
      </if>
      <if test="bookname != null">
        #{bookname,jdbcType=VARCHAR},
      </if>
      <if test="author != null">
        #{author,jdbcType=VARCHAR},
      </if>
      <if test="publish != null">
        #{publish,jdbcType=VARCHAR},
      </if>
      <if test="isbn != null">
        #{isbn,jdbcType=VARCHAR},
      </if>
      <if test="publishdate != null">
        #{publishdate,jdbcType=VARCHAR},
      </if>
      <if test="picture != null">
        #{picture,jdbcType=VARCHAR},
      </if>
      <if test="repertory != null">
        #{repertory,jdbcType=CHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="stock != null">
        #{stock,jdbcType=INTEGER},
      </if>
      <if test="sales != null">
        #{sales,jdbcType=INTEGER},
      </if>
      <if test="bookclassid != null">
        #{bookclassid,jdbcType=INTEGER},
      </if>
      <if test="isrecommend != null">
        #{isrecommend,jdbcType=CHAR},
      </if>
      <if test="intro != null">
        #{intro,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.booksales.model.BookExample" resultType="java.lang.Integer">
    select count(*) from bsbook
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update bsbook
    <set>
      <if test="record.bookid != null">
        BookId = #{record.bookid,jdbcType=INTEGER},
      </if>
      <if test="record.bookname != null">
        BookName = #{record.bookname,jdbcType=VARCHAR},
      </if>
      <if test="record.author != null">
        Author = #{record.author,jdbcType=VARCHAR},
      </if>
      <if test="record.publish != null">
        Publish = #{record.publish,jdbcType=VARCHAR},
      </if>
      <if test="record.isbn != null">
        ISBN = #{record.isbn,jdbcType=VARCHAR},
      </if>
      <if test="record.publishdate != null">
        PublishDate = #{record.publishdate,jdbcType=VARCHAR},
      </if>
      <if test="record.picture != null">
        Picture = #{record.picture,jdbcType=VARCHAR},
      </if>
      <if test="record.repertory != null">
        Repertory = #{record.repertory,jdbcType=CHAR},
      </if>
      <if test="record.price != null">
        Price = #{record.price,jdbcType=DECIMAL},
      </if>
      <if test="record.stock != null">
        Stock = #{record.stock,jdbcType=INTEGER},
      </if>
      <if test="record.sales != null">
        Sales = #{record.sales,jdbcType=INTEGER},
      </if>
      <if test="record.bookclassid != null">
        BookClassId = #{record.bookclassid,jdbcType=INTEGER},
      </if>
      <if test="record.isrecommend != null">
        IsRecommend = #{record.isrecommend,jdbcType=CHAR},
      </if>
      <if test="record.intro != null">
        Intro = #{record.intro,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update bsbook
    set BookId = #{record.bookid,jdbcType=INTEGER},
      BookName = #{record.bookname,jdbcType=VARCHAR},
      Author = #{record.author,jdbcType=VARCHAR},
      Publish = #{record.publish,jdbcType=VARCHAR},
      ISBN = #{record.isbn,jdbcType=VARCHAR},
      PublishDate = #{record.publishdate,jdbcType=VARCHAR},
      Picture = #{record.picture,jdbcType=VARCHAR},
      Repertory = #{record.repertory,jdbcType=CHAR},
      Price = #{record.price,jdbcType=DECIMAL},
      Stock = #{record.stock,jdbcType=INTEGER},
      Sales = #{record.sales,jdbcType=INTEGER},
      BookClassId = #{record.bookclassid,jdbcType=INTEGER},
      IsRecommend = #{record.isrecommend,jdbcType=CHAR},
      Intro = #{record.intro,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update bsbook
    set BookId = #{record.bookid,jdbcType=INTEGER},
      BookName = #{record.bookname,jdbcType=VARCHAR},
      Author = #{record.author,jdbcType=VARCHAR},
      Publish = #{record.publish,jdbcType=VARCHAR},
      ISBN = #{record.isbn,jdbcType=VARCHAR},
      PublishDate = #{record.publishdate,jdbcType=VARCHAR},
      Picture = #{record.picture,jdbcType=VARCHAR},
      Repertory = #{record.repertory,jdbcType=CHAR},
      Price = #{record.price,jdbcType=DECIMAL},
      Stock = #{record.stock,jdbcType=INTEGER},
      Sales = #{record.sales,jdbcType=INTEGER},
      BookClassId = #{record.bookclassid,jdbcType=INTEGER},
      IsRecommend = #{record.isrecommend,jdbcType=CHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.booksales.model.Book">
    update bsbook
    <set>
      <if test="bookname != null">
        BookName = #{bookname,jdbcType=VARCHAR},
      </if>
      <if test="author != null">
        Author = #{author,jdbcType=VARCHAR},
      </if>
      <if test="publish != null">
        Publish = #{publish,jdbcType=VARCHAR},
      </if>
      <if test="isbn != null">
        ISBN = #{isbn,jdbcType=VARCHAR},
      </if>
      <if test="publishdate != null">
        PublishDate = #{publishdate,jdbcType=VARCHAR},
      </if>
      <if test="picture != null">
        Picture = #{picture,jdbcType=VARCHAR},
      </if>
      <if test="repertory != null">
        Repertory = #{repertory,jdbcType=CHAR},
      </if>
      <if test="price != null">
        Price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="stock != null">
        Stock = #{stock,jdbcType=INTEGER},
      </if>
      <if test="sales != null">
        Sales = #{sales,jdbcType=INTEGER},
      </if>
      <if test="bookclassid != null">
        BookClassId = #{bookclassid,jdbcType=INTEGER},
      </if>
      <if test="isrecommend != null">
        IsRecommend = #{isrecommend,jdbcType=CHAR},
      </if>
      <if test="intro != null">
        Intro = #{intro,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where BookId = #{bookid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.booksales.model.Book">
    update bsbook
    set BookName = #{bookname,jdbcType=VARCHAR},
      Author = #{author,jdbcType=VARCHAR},
      Publish = #{publish,jdbcType=VARCHAR},
      ISBN = #{isbn,jdbcType=VARCHAR},
      PublishDate = #{publishdate,jdbcType=VARCHAR},
      Picture = #{picture,jdbcType=VARCHAR},
      Repertory = #{repertory,jdbcType=CHAR},
      Price = #{price,jdbcType=DECIMAL},
      Stock = #{stock,jdbcType=INTEGER},
      Sales = #{sales,jdbcType=INTEGER},
      BookClassId = #{bookclassid,jdbcType=INTEGER},
      IsRecommend = #{isrecommend,jdbcType=CHAR},
      Intro = #{intro,jdbcType=LONGVARCHAR}
    where BookId = #{bookid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.booksales.model.Book">
    update bsbook
    set BookName = #{bookname,jdbcType=VARCHAR},
      Author = #{author,jdbcType=VARCHAR},
      Publish = #{publish,jdbcType=VARCHAR},
      ISBN = #{isbn,jdbcType=VARCHAR},
      PublishDate = #{publishdate,jdbcType=VARCHAR},
      Picture = #{picture,jdbcType=VARCHAR},
      Repertory = #{repertory,jdbcType=CHAR},
      Price = #{price,jdbcType=DECIMAL},
      Stock = #{stock,jdbcType=INTEGER},
      Sales = #{sales,jdbcType=INTEGER},
      BookClassId = #{bookclassid,jdbcType=INTEGER},
      IsRecommend = #{isrecommend,jdbcType=CHAR}
    where BookId = #{bookid,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.booksales.model.Book">
    <id column="BookId" jdbcType="INTEGER" property="bookid" />
    <result column="BookName" jdbcType="VARCHAR" property="bookname" />
    <result column="Author" jdbcType="VARCHAR" property="author" />
    <result column="Publish" jdbcType="VARCHAR" property="publish" />
    <result column="ISBN" jdbcType="VARCHAR" property="isbn" />
    <result column="PublishDate" jdbcType="VARCHAR" property="publishdate" />
    <result column="Picture" jdbcType="VARCHAR" property="picture" />
    <result column="Repertory" jdbcType="CHAR" property="repertory" />
    <result column="Price" jdbcType="DECIMAL" property="price" />
    <result column="Stock" jdbcType="INTEGER" property="stock" />
    <result column="Sales" jdbcType="INTEGER" property="sales" />
    <result column="BookClassId" jdbcType="INTEGER" property="bookclassid" />
    <result column="IsRecommend" jdbcType="CHAR" property="isrecommend" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.booksales.model.Book">
    <result column="Intro" jdbcType="LONGVARCHAR" property="intro" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    BookId, BookName, Author, Publish, ISBN, PublishDate, Picture, Repertory, Price, 
    Stock, Sales, BookClassId, IsRecommend
  </sql>
  <sql id="Blob_Column_List">
    Intro
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.booksales.model.BookExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from bsbook
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.booksales.model.BookExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from bsbook
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from bsbook
    where BookId = #{bookid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from bsbook
    where BookId = #{bookid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.booksales.model.BookExample">
    delete from bsbook
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.booksales.model.Book">
    insert into bsbook (BookId, BookName, Author, 
      Publish, ISBN, PublishDate, 
      Picture, Repertory, Price, 
      Stock, Sales, BookClassId, 
      IsRecommend, Intro)
    values (#{bookid,jdbcType=INTEGER}, #{bookname,jdbcType=VARCHAR}, #{author,jdbcType=VARCHAR}, 
      #{publish,jdbcType=VARCHAR}, #{isbn,jdbcType=VARCHAR}, #{publishdate,jdbcType=VARCHAR}, 
      #{picture,jdbcType=VARCHAR}, #{repertory,jdbcType=CHAR}, #{price,jdbcType=DECIMAL}, 
      #{stock,jdbcType=INTEGER}, #{sales,jdbcType=INTEGER}, #{bookclassid,jdbcType=INTEGER}, 
      #{isrecommend,jdbcType=CHAR}, #{intro,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.booksales.model.Book">
    insert into bsbook
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="bookid != null">
        BookId,
      </if>
      <if test="bookname != null">
        BookName,
      </if>
      <if test="author != null">
        Author,
      </if>
      <if test="publish != null">
        Publish,
      </if>
      <if test="isbn != null">
        ISBN,
      </if>
      <if test="publishdate != null">
        PublishDate,
      </if>
      <if test="picture != null">
        Picture,
      </if>
      <if test="repertory != null">
        Repertory,
      </if>
      <if test="price != null">
        Price,
      </if>
      <if test="stock != null">
        Stock,
      </if>
      <if test="sales != null">
        Sales,
      </if>
      <if test="bookclassid != null">
        BookClassId,
      </if>
      <if test="isrecommend != null">
        IsRecommend,
      </if>
      <if test="intro != null">
        Intro,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="bookid != null">
        #{bookid,jdbcType=INTEGER},
      </if>
      <if test="bookname != null">
        #{bookname,jdbcType=VARCHAR},
      </if>
      <if test="author != null">
        #{author,jdbcType=VARCHAR},
      </if>
      <if test="publish != null">
        #{publish,jdbcType=VARCHAR},
      </if>
      <if test="isbn != null">
        #{isbn,jdbcType=VARCHAR},
      </if>
      <if test="publishdate != null">
        #{publishdate,jdbcType=VARCHAR},
      </if>
      <if test="picture != null">
        #{picture,jdbcType=VARCHAR},
      </if>
      <if test="repertory != null">
        #{repertory,jdbcType=CHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="stock != null">
        #{stock,jdbcType=INTEGER},
      </if>
      <if test="sales != null">
        #{sales,jdbcType=INTEGER},
      </if>
      <if test="bookclassid != null">
        #{bookclassid,jdbcType=INTEGER},
      </if>
      <if test="isrecommend != null">
        #{isrecommend,jdbcType=CHAR},
      </if>
      <if test="intro != null">
        #{intro,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.booksales.model.BookExample" resultType="java.lang.Integer">
    select count(*) from bsbook
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update bsbook
    <set>
      <if test="record.bookid != null">
        BookId = #{record.bookid,jdbcType=INTEGER},
      </if>
      <if test="record.bookname != null">
        BookName = #{record.bookname,jdbcType=VARCHAR},
      </if>
      <if test="record.author != null">
        Author = #{record.author,jdbcType=VARCHAR},
      </if>
      <if test="record.publish != null">
        Publish = #{record.publish,jdbcType=VARCHAR},
      </if>
      <if test="record.isbn != null">
        ISBN = #{record.isbn,jdbcType=VARCHAR},
      </if>
      <if test="record.publishdate != null">
        PublishDate = #{record.publishdate,jdbcType=VARCHAR},
      </if>
      <if test="record.picture != null">
        Picture = #{record.picture,jdbcType=VARCHAR},
      </if>
      <if test="record.repertory != null">
        Repertory = #{record.repertory,jdbcType=CHAR},
      </if>
      <if test="record.price != null">
        Price = #{record.price,jdbcType=DECIMAL},
      </if>
      <if test="record.stock != null">
        Stock = #{record.stock,jdbcType=INTEGER},
      </if>
      <if test="record.sales != null">
        Sales = #{record.sales,jdbcType=INTEGER},
      </if>
      <if test="record.bookclassid != null">
        BookClassId = #{record.bookclassid,jdbcType=INTEGER},
      </if>
      <if test="record.isrecommend != null">
        IsRecommend = #{record.isrecommend,jdbcType=CHAR},
      </if>
      <if test="record.intro != null">
        Intro = #{record.intro,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update bsbook
    set BookId = #{record.bookid,jdbcType=INTEGER},
      BookName = #{record.bookname,jdbcType=VARCHAR},
      Author = #{record.author,jdbcType=VARCHAR},
      Publish = #{record.publish,jdbcType=VARCHAR},
      ISBN = #{record.isbn,jdbcType=VARCHAR},
      PublishDate = #{record.publishdate,jdbcType=VARCHAR},
      Picture = #{record.picture,jdbcType=VARCHAR},
      Repertory = #{record.repertory,jdbcType=CHAR},
      Price = #{record.price,jdbcType=DECIMAL},
      Stock = #{record.stock,jdbcType=INTEGER},
      Sales = #{record.sales,jdbcType=INTEGER},
      BookClassId = #{record.bookclassid,jdbcType=INTEGER},
      IsRecommend = #{record.isrecommend,jdbcType=CHAR},
      Intro = #{record.intro,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update bsbook
    set BookId = #{record.bookid,jdbcType=INTEGER},
      BookName = #{record.bookname,jdbcType=VARCHAR},
      Author = #{record.author,jdbcType=VARCHAR},
      Publish = #{record.publish,jdbcType=VARCHAR},
      ISBN = #{record.isbn,jdbcType=VARCHAR},
      PublishDate = #{record.publishdate,jdbcType=VARCHAR},
      Picture = #{record.picture,jdbcType=VARCHAR},
      Repertory = #{record.repertory,jdbcType=CHAR},
      Price = #{record.price,jdbcType=DECIMAL},
      Stock = #{record.stock,jdbcType=INTEGER},
      Sales = #{record.sales,jdbcType=INTEGER},
      BookClassId = #{record.bookclassid,jdbcType=INTEGER},
      IsRecommend = #{record.isrecommend,jdbcType=CHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.booksales.model.Book">
    update bsbook
    <set>
      <if test="bookname != null">
        BookName = #{bookname,jdbcType=VARCHAR},
      </if>
      <if test="author != null">
        Author = #{author,jdbcType=VARCHAR},
      </if>
      <if test="publish != null">
        Publish = #{publish,jdbcType=VARCHAR},
      </if>
      <if test="isbn != null">
        ISBN = #{isbn,jdbcType=VARCHAR},
      </if>
      <if test="publishdate != null">
        PublishDate = #{publishdate,jdbcType=VARCHAR},
      </if>
      <if test="picture != null">
        Picture = #{picture,jdbcType=VARCHAR},
      </if>
      <if test="repertory != null">
        Repertory = #{repertory,jdbcType=CHAR},
      </if>
      <if test="price != null">
        Price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="stock != null">
        Stock = #{stock,jdbcType=INTEGER},
      </if>
      <if test="sales != null">
        Sales = #{sales,jdbcType=INTEGER},
      </if>
      <if test="bookclassid != null">
        BookClassId = #{bookclassid,jdbcType=INTEGER},
      </if>
      <if test="isrecommend != null">
        IsRecommend = #{isrecommend,jdbcType=CHAR},
      </if>
      <if test="intro != null">
        Intro = #{intro,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where BookId = #{bookid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.booksales.model.Book">
    update bsbook
    set BookName = #{bookname,jdbcType=VARCHAR},
      Author = #{author,jdbcType=VARCHAR},
      Publish = #{publish,jdbcType=VARCHAR},
      ISBN = #{isbn,jdbcType=VARCHAR},
      PublishDate = #{publishdate,jdbcType=VARCHAR},
      Picture = #{picture,jdbcType=VARCHAR},
      Repertory = #{repertory,jdbcType=CHAR},
      Price = #{price,jdbcType=DECIMAL},
      Stock = #{stock,jdbcType=INTEGER},
      Sales = #{sales,jdbcType=INTEGER},
      BookClassId = #{bookclassid,jdbcType=INTEGER},
      IsRecommend = #{isrecommend,jdbcType=CHAR},
      Intro = #{intro,jdbcType=LONGVARCHAR}
    where BookId = #{bookid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.booksales.model.Book">
    update bsbook
    set BookName = #{bookname,jdbcType=VARCHAR},
      Author = #{author,jdbcType=VARCHAR},
      Publish = #{publish,jdbcType=VARCHAR},
      ISBN = #{isbn,jdbcType=VARCHAR},
      PublishDate = #{publishdate,jdbcType=VARCHAR},
      Picture = #{picture,jdbcType=VARCHAR},
      Repertory = #{repertory,jdbcType=CHAR},
      Price = #{price,jdbcType=DECIMAL},
      Stock = #{stock,jdbcType=INTEGER},
      Sales = #{sales,jdbcType=INTEGER},
      BookClassId = #{bookclassid,jdbcType=INTEGER},
      IsRecommend = #{isrecommend,jdbcType=CHAR}
    where BookId = #{bookid,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.booksales.model.Book">
    <id column="BookId" jdbcType="INTEGER" property="bookid" />
    <result column="BookName" jdbcType="VARCHAR" property="bookname" />
    <result column="Author" jdbcType="VARCHAR" property="author" />
    <result column="Publish" jdbcType="VARCHAR" property="publish" />
    <result column="ISBN" jdbcType="VARCHAR" property="isbn" />
    <result column="PublishDate" jdbcType="VARCHAR" property="publishdate" />
    <result column="Picture" jdbcType="VARCHAR" property="picture" />
    <result column="Repertory" jdbcType="CHAR" property="repertory" />
    <result column="Price" jdbcType="DECIMAL" property="price" />
    <result column="Stock" jdbcType="INTEGER" property="stock" />
    <result column="Sales" jdbcType="INTEGER" property="sales" />
    <result column="BookClassId" jdbcType="INTEGER" property="bookclassid" />
    <result column="IsRecommend" jdbcType="CHAR" property="isrecommend" />
    <result column="Intro" jdbcType="LONGVARCHAR" property="intro" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from bsbook
    where BookId = #{bookid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.booksales.model.Book">
    insert into bsbook (BookId, BookName, Author, 
      Publish, ISBN, PublishDate, 
      Picture, Repertory, Price, 
      Stock, Sales, BookClassId, 
      IsRecommend, Intro)
    values (#{bookid,jdbcType=INTEGER}, #{bookname,jdbcType=VARCHAR}, #{author,jdbcType=VARCHAR}, 
      #{publish,jdbcType=VARCHAR}, #{isbn,jdbcType=VARCHAR}, #{publishdate,jdbcType=VARCHAR}, 
      #{picture,jdbcType=VARCHAR}, #{repertory,jdbcType=CHAR}, #{price,jdbcType=DECIMAL}, 
      #{stock,jdbcType=INTEGER}, #{sales,jdbcType=INTEGER}, #{bookclassid,jdbcType=INTEGER}, 
      #{isrecommend,jdbcType=CHAR}, #{intro,jdbcType=LONGVARCHAR})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.booksales.model.Book">
    update bsbook
    set BookName = #{bookname,jdbcType=VARCHAR},
      Author = #{author,jdbcType=VARCHAR},
      Publish = #{publish,jdbcType=VARCHAR},
      ISBN = #{isbn,jdbcType=VARCHAR},
      PublishDate = #{publishdate,jdbcType=VARCHAR},
      Picture = #{picture,jdbcType=VARCHAR},
      Repertory = #{repertory,jdbcType=CHAR},
      Price = #{price,jdbcType=DECIMAL},
      Stock = #{stock,jdbcType=INTEGER},
      Sales = #{sales,jdbcType=INTEGER},
      BookClassId = #{bookclassid,jdbcType=INTEGER},
      IsRecommend = #{isrecommend,jdbcType=CHAR},
      Intro = #{intro,jdbcType=LONGVARCHAR}
    where BookId = #{bookid,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select BookId, BookName, Author, Publish, ISBN, PublishDate, Picture, Repertory, 
    Price, Stock, Sales, BookClassId, IsRecommend, Intro
    from bsbook
    where BookId = #{bookid,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select BookId, BookName, Author, Publish, ISBN, PublishDate, Picture, Repertory, 
    Price, Stock, Sales, BookClassId, IsRecommend, Intro
    from bsbook
  </select>
</mapper>