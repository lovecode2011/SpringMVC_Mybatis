<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.booksales.dao.NoticeMapper">
  <resultMap id="BaseResultMap" type="com.booksales.model.Notice">
    <id column="NoticeId" jdbcType="INTEGER" property="noticeid" />
    <result column="NoticTitle" jdbcType="VARCHAR" property="notictitle" />
    <result column="NoticeTime" jdbcType="TIMESTAMP" property="noticetime" />
    <result column="BookId" jdbcType="INTEGER" property="bookid" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    NoticeId, NoticTitle, NoticeTime, BookId
  </sql>
  <select id="selectByExample" parameterType="com.booksales.model.NoticeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from bsnotice
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from bsnotice
    where NoticeId = #{noticeid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from bsnotice
    where NoticeId = #{noticeid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.booksales.model.NoticeExample">
    delete from bsnotice
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.booksales.model.Notice">
    insert into bsnotice (NoticeId, NoticTitle, NoticeTime, 
      BookId)
    values (#{noticeid,jdbcType=INTEGER}, #{notictitle,jdbcType=VARCHAR}, #{noticetime,jdbcType=TIMESTAMP}, 
      #{bookid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.booksales.model.Notice">
    insert into bsnotice
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="noticeid != null">
        NoticeId,
      </if>
      <if test="notictitle != null">
        NoticTitle,
      </if>
      <if test="noticetime != null">
        NoticeTime,
      </if>
      <if test="bookid != null">
        BookId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="noticeid != null">
        #{noticeid,jdbcType=INTEGER},
      </if>
      <if test="notictitle != null">
        #{notictitle,jdbcType=VARCHAR},
      </if>
      <if test="noticetime != null">
        #{noticetime,jdbcType=TIMESTAMP},
      </if>
      <if test="bookid != null">
        #{bookid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.booksales.model.NoticeExample" resultType="java.lang.Integer">
    select count(*) from bsnotice
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update bsnotice
    <set>
      <if test="record.noticeid != null">
        NoticeId = #{record.noticeid,jdbcType=INTEGER},
      </if>
      <if test="record.notictitle != null">
        NoticTitle = #{record.notictitle,jdbcType=VARCHAR},
      </if>
      <if test="record.noticetime != null">
        NoticeTime = #{record.noticetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.bookid != null">
        BookId = #{record.bookid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update bsnotice
    set NoticeId = #{record.noticeid,jdbcType=INTEGER},
      NoticTitle = #{record.notictitle,jdbcType=VARCHAR},
      NoticeTime = #{record.noticetime,jdbcType=TIMESTAMP},
      BookId = #{record.bookid,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.booksales.model.Notice">
    update bsnotice
    <set>
      <if test="notictitle != null">
        NoticTitle = #{notictitle,jdbcType=VARCHAR},
      </if>
      <if test="noticetime != null">
        NoticeTime = #{noticetime,jdbcType=TIMESTAMP},
      </if>
      <if test="bookid != null">
        BookId = #{bookid,jdbcType=INTEGER},
      </if>
    </set>
    where NoticeId = #{noticeid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.booksales.model.Notice">
    update bsnotice
    set NoticTitle = #{notictitle,jdbcType=VARCHAR},
      NoticeTime = #{noticetime,jdbcType=TIMESTAMP},
      BookId = #{bookid,jdbcType=INTEGER}
    where NoticeId = #{noticeid,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.booksales.model.Notice">
    <id column="NoticeId" jdbcType="INTEGER" property="noticeid" />
    <result column="NoticTitle" jdbcType="VARCHAR" property="notictitle" />
    <result column="NoticeTime" jdbcType="TIMESTAMP" property="noticetime" />
    <result column="BookId" jdbcType="INTEGER" property="bookid" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    NoticeId, NoticTitle, NoticeTime, BookId
  </sql>
  <select id="selectByExample" parameterType="com.booksales.model.NoticeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from bsnotice
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from bsnotice
    where NoticeId = #{noticeid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from bsnotice
    where NoticeId = #{noticeid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.booksales.model.NoticeExample">
    delete from bsnotice
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.booksales.model.Notice">
    insert into bsnotice (NoticeId, NoticTitle, NoticeTime, 
      BookId)
    values (#{noticeid,jdbcType=INTEGER}, #{notictitle,jdbcType=VARCHAR}, #{noticetime,jdbcType=TIMESTAMP}, 
      #{bookid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.booksales.model.Notice">
    insert into bsnotice
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="noticeid != null">
        NoticeId,
      </if>
      <if test="notictitle != null">
        NoticTitle,
      </if>
      <if test="noticetime != null">
        NoticeTime,
      </if>
      <if test="bookid != null">
        BookId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="noticeid != null">
        #{noticeid,jdbcType=INTEGER},
      </if>
      <if test="notictitle != null">
        #{notictitle,jdbcType=VARCHAR},
      </if>
      <if test="noticetime != null">
        #{noticetime,jdbcType=TIMESTAMP},
      </if>
      <if test="bookid != null">
        #{bookid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.booksales.model.NoticeExample" resultType="java.lang.Integer">
    select count(*) from bsnotice
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update bsnotice
    <set>
      <if test="record.noticeid != null">
        NoticeId = #{record.noticeid,jdbcType=INTEGER},
      </if>
      <if test="record.notictitle != null">
        NoticTitle = #{record.notictitle,jdbcType=VARCHAR},
      </if>
      <if test="record.noticetime != null">
        NoticeTime = #{record.noticetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.bookid != null">
        BookId = #{record.bookid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update bsnotice
    set NoticeId = #{record.noticeid,jdbcType=INTEGER},
      NoticTitle = #{record.notictitle,jdbcType=VARCHAR},
      NoticeTime = #{record.noticetime,jdbcType=TIMESTAMP},
      BookId = #{record.bookid,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.booksales.model.Notice">
    update bsnotice
    <set>
      <if test="notictitle != null">
        NoticTitle = #{notictitle,jdbcType=VARCHAR},
      </if>
      <if test="noticetime != null">
        NoticeTime = #{noticetime,jdbcType=TIMESTAMP},
      </if>
      <if test="bookid != null">
        BookId = #{bookid,jdbcType=INTEGER},
      </if>
    </set>
    where NoticeId = #{noticeid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.booksales.model.Notice">
    update bsnotice
    set NoticTitle = #{notictitle,jdbcType=VARCHAR},
      NoticeTime = #{noticetime,jdbcType=TIMESTAMP},
      BookId = #{bookid,jdbcType=INTEGER}
    where NoticeId = #{noticeid,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.booksales.model.Notice">
    <id column="NoticeId" jdbcType="INTEGER" property="noticeid" />
    <result column="NoticTitle" jdbcType="VARCHAR" property="notictitle" />
    <result column="NoticeTime" jdbcType="TIMESTAMP" property="noticetime" />
    <result column="BookId" jdbcType="INTEGER" property="bookid" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    NoticeId, NoticTitle, NoticeTime, BookId
  </sql>
  <select id="selectByExample" parameterType="com.booksales.model.NoticeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from bsnotice
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from bsnotice
    where NoticeId = #{noticeid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from bsnotice
    where NoticeId = #{noticeid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.booksales.model.NoticeExample">
    delete from bsnotice
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.booksales.model.Notice">
    insert into bsnotice (NoticeId, NoticTitle, NoticeTime, 
      BookId)
    values (#{noticeid,jdbcType=INTEGER}, #{notictitle,jdbcType=VARCHAR}, #{noticetime,jdbcType=TIMESTAMP}, 
      #{bookid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.booksales.model.Notice">
    insert into bsnotice
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="noticeid != null">
        NoticeId,
      </if>
      <if test="notictitle != null">
        NoticTitle,
      </if>
      <if test="noticetime != null">
        NoticeTime,
      </if>
      <if test="bookid != null">
        BookId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="noticeid != null">
        #{noticeid,jdbcType=INTEGER},
      </if>
      <if test="notictitle != null">
        #{notictitle,jdbcType=VARCHAR},
      </if>
      <if test="noticetime != null">
        #{noticetime,jdbcType=TIMESTAMP},
      </if>
      <if test="bookid != null">
        #{bookid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.booksales.model.NoticeExample" resultType="java.lang.Integer">
    select count(*) from bsnotice
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update bsnotice
    <set>
      <if test="record.noticeid != null">
        NoticeId = #{record.noticeid,jdbcType=INTEGER},
      </if>
      <if test="record.notictitle != null">
        NoticTitle = #{record.notictitle,jdbcType=VARCHAR},
      </if>
      <if test="record.noticetime != null">
        NoticeTime = #{record.noticetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.bookid != null">
        BookId = #{record.bookid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update bsnotice
    set NoticeId = #{record.noticeid,jdbcType=INTEGER},
      NoticTitle = #{record.notictitle,jdbcType=VARCHAR},
      NoticeTime = #{record.noticetime,jdbcType=TIMESTAMP},
      BookId = #{record.bookid,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.booksales.model.Notice">
    update bsnotice
    <set>
      <if test="notictitle != null">
        NoticTitle = #{notictitle,jdbcType=VARCHAR},
      </if>
      <if test="noticetime != null">
        NoticeTime = #{noticetime,jdbcType=TIMESTAMP},
      </if>
      <if test="bookid != null">
        BookId = #{bookid,jdbcType=INTEGER},
      </if>
    </set>
    where NoticeId = #{noticeid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.booksales.model.Notice">
    update bsnotice
    set NoticTitle = #{notictitle,jdbcType=VARCHAR},
      NoticeTime = #{noticetime,jdbcType=TIMESTAMP},
      BookId = #{bookid,jdbcType=INTEGER}
    where NoticeId = #{noticeid,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.booksales.model.Notice">
    <id column="NoticeId" jdbcType="INTEGER" property="noticeid" />
    <result column="NoticTitle" jdbcType="VARCHAR" property="notictitle" />
    <result column="NoticeTime" jdbcType="TIMESTAMP" property="noticetime" />
    <result column="BookId" jdbcType="INTEGER" property="bookid" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from bsnotice
    where NoticeId = #{noticeid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.booksales.model.Notice">
    insert into bsnotice (NoticeId, NoticTitle, NoticeTime, 
      BookId)
    values (#{noticeid,jdbcType=INTEGER}, #{notictitle,jdbcType=VARCHAR}, #{noticetime,jdbcType=TIMESTAMP}, 
      #{bookid,jdbcType=INTEGER})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.booksales.model.Notice">
    update bsnotice
    set NoticTitle = #{notictitle,jdbcType=VARCHAR},
      NoticeTime = #{noticetime,jdbcType=TIMESTAMP},
      BookId = #{bookid,jdbcType=INTEGER}
    where NoticeId = #{noticeid,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select NoticeId, NoticTitle, NoticeTime, BookId
    from bsnotice
    where NoticeId = #{noticeid,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select NoticeId, NoticTitle, NoticeTime, BookId
    from bsnotice
  </select>
</mapper>