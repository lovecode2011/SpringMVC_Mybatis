<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.booksales.dao.UserMapper">
  <resultMap id="BaseResultMap" type="com.booksales.model.User">
    <id column="UserId" jdbcType="INTEGER" property="userid" />
    <result column="UserName" jdbcType="VARCHAR" property="username" />
    <result column="Password" jdbcType="VARCHAR" property="password" />
    <result column="Credit" jdbcType="INTEGER" property="credit" />
    <result column="Email" jdbcType="VARCHAR" property="email" />
    <result column="IsRoot" jdbcType="CHAR" property="isroot" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    UserId, UserName, Password, Credit, Email, IsRoot
  </sql>
  <select id="selectByExample" parameterType="com.booksales.model.UserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from bsuser
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from bsuser
    where UserId = #{userid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from bsuser
    where UserId = #{userid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.booksales.model.UserExample">
    delete from bsuser
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.booksales.model.User">
    insert into bsuser (UserId, UserName, Password, 
      Credit, Email, IsRoot)
    values (#{userid,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{credit,jdbcType=INTEGER}, #{email,jdbcType=VARCHAR}, #{isroot,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.booksales.model.User">
    insert into bsuser
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        UserId,
      </if>
      <if test="username != null">
        UserName,
      </if>
      <if test="password != null">
        Password,
      </if>
      <if test="credit != null">
        Credit,
      </if>
      <if test="email != null">
        Email,
      </if>
      <if test="isroot != null">
        IsRoot,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="credit != null">
        #{credit,jdbcType=INTEGER},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="isroot != null">
        #{isroot,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.booksales.model.UserExample" resultType="java.lang.Integer">
    select count(*) from bsuser
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update bsuser
    <set>
      <if test="record.userid != null">
        UserId = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.username != null">
        UserName = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        Password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.credit != null">
        Credit = #{record.credit,jdbcType=INTEGER},
      </if>
      <if test="record.email != null">
        Email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.isroot != null">
        IsRoot = #{record.isroot,jdbcType=CHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update bsuser
    set UserId = #{record.userid,jdbcType=INTEGER},
      UserName = #{record.username,jdbcType=VARCHAR},
      Password = #{record.password,jdbcType=VARCHAR},
      Credit = #{record.credit,jdbcType=INTEGER},
      Email = #{record.email,jdbcType=VARCHAR},
      IsRoot = #{record.isroot,jdbcType=CHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.booksales.model.User">
    update bsuser
    <set>
      <if test="username != null">
        UserName = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        Password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="credit != null">
        Credit = #{credit,jdbcType=INTEGER},
      </if>
      <if test="email != null">
        Email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="isroot != null">
        IsRoot = #{isroot,jdbcType=CHAR},
      </if>
    </set>
    where UserId = #{userid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.booksales.model.User">
    update bsuser
    set UserName = #{username,jdbcType=VARCHAR},
      Password = #{password,jdbcType=VARCHAR},
      Credit = #{credit,jdbcType=INTEGER},
      Email = #{email,jdbcType=VARCHAR},
      IsRoot = #{isroot,jdbcType=CHAR}
    where UserId = #{userid,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.booksales.model.User">
    <id column="UserId" jdbcType="INTEGER" property="userid" />
    <result column="UserName" jdbcType="VARCHAR" property="username" />
    <result column="Password" jdbcType="VARCHAR" property="password" />
    <result column="Credit" jdbcType="INTEGER" property="credit" />
    <result column="Email" jdbcType="VARCHAR" property="email" />
    <result column="IsRoot" jdbcType="CHAR" property="isroot" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    UserId, UserName, Password, Credit, Email, IsRoot
  </sql>
  <select id="selectByExample" parameterType="com.booksales.model.UserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from bsuser
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from bsuser
    where UserId = #{userid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from bsuser
    where UserId = #{userid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.booksales.model.UserExample">
    delete from bsuser
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.booksales.model.User">
    insert into bsuser (UserId, UserName, Password, 
      Credit, Email, IsRoot)
    values (#{userid,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{credit,jdbcType=INTEGER}, #{email,jdbcType=VARCHAR}, #{isroot,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.booksales.model.User">
    insert into bsuser
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        UserId,
      </if>
      <if test="username != null">
        UserName,
      </if>
      <if test="password != null">
        Password,
      </if>
      <if test="credit != null">
        Credit,
      </if>
      <if test="email != null">
        Email,
      </if>
      <if test="isroot != null">
        IsRoot,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="credit != null">
        #{credit,jdbcType=INTEGER},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="isroot != null">
        #{isroot,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.booksales.model.UserExample" resultType="java.lang.Integer">
    select count(*) from bsuser
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update bsuser
    <set>
      <if test="record.userid != null">
        UserId = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.username != null">
        UserName = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        Password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.credit != null">
        Credit = #{record.credit,jdbcType=INTEGER},
      </if>
      <if test="record.email != null">
        Email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.isroot != null">
        IsRoot = #{record.isroot,jdbcType=CHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update bsuser
    set UserId = #{record.userid,jdbcType=INTEGER},
      UserName = #{record.username,jdbcType=VARCHAR},
      Password = #{record.password,jdbcType=VARCHAR},
      Credit = #{record.credit,jdbcType=INTEGER},
      Email = #{record.email,jdbcType=VARCHAR},
      IsRoot = #{record.isroot,jdbcType=CHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.booksales.model.User">
    update bsuser
    <set>
      <if test="username != null">
        UserName = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        Password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="credit != null">
        Credit = #{credit,jdbcType=INTEGER},
      </if>
      <if test="email != null">
        Email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="isroot != null">
        IsRoot = #{isroot,jdbcType=CHAR},
      </if>
    </set>
    where UserId = #{userid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.booksales.model.User">
    update bsuser
    set UserName = #{username,jdbcType=VARCHAR},
      Password = #{password,jdbcType=VARCHAR},
      Credit = #{credit,jdbcType=INTEGER},
      Email = #{email,jdbcType=VARCHAR},
      IsRoot = #{isroot,jdbcType=CHAR}
    where UserId = #{userid,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.booksales.model.User">
    <id column="UserId" jdbcType="INTEGER" property="userid" />
    <result column="UserName" jdbcType="VARCHAR" property="username" />
    <result column="Password" jdbcType="VARCHAR" property="password" />
    <result column="Credit" jdbcType="INTEGER" property="credit" />
    <result column="Email" jdbcType="VARCHAR" property="email" />
    <result column="IsRoot" jdbcType="CHAR" property="isroot" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    UserId, UserName, Password, Credit, Email, IsRoot
  </sql>
  <select id="selectByExample" parameterType="com.booksales.model.UserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from bsuser
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from bsuser
    where UserId = #{userid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from bsuser
    where UserId = #{userid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.booksales.model.UserExample">
    delete from bsuser
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.booksales.model.User">
    insert into bsuser (UserId, UserName, Password, 
      Credit, Email, IsRoot)
    values (#{userid,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{credit,jdbcType=INTEGER}, #{email,jdbcType=VARCHAR}, #{isroot,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.booksales.model.User">
    insert into bsuser
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        UserId,
      </if>
      <if test="username != null">
        UserName,
      </if>
      <if test="password != null">
        Password,
      </if>
      <if test="credit != null">
        Credit,
      </if>
      <if test="email != null">
        Email,
      </if>
      <if test="isroot != null">
        IsRoot,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="credit != null">
        #{credit,jdbcType=INTEGER},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="isroot != null">
        #{isroot,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.booksales.model.UserExample" resultType="java.lang.Integer">
    select count(*) from bsuser
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update bsuser
    <set>
      <if test="record.userid != null">
        UserId = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.username != null">
        UserName = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        Password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.credit != null">
        Credit = #{record.credit,jdbcType=INTEGER},
      </if>
      <if test="record.email != null">
        Email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.isroot != null">
        IsRoot = #{record.isroot,jdbcType=CHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update bsuser
    set UserId = #{record.userid,jdbcType=INTEGER},
      UserName = #{record.username,jdbcType=VARCHAR},
      Password = #{record.password,jdbcType=VARCHAR},
      Credit = #{record.credit,jdbcType=INTEGER},
      Email = #{record.email,jdbcType=VARCHAR},
      IsRoot = #{record.isroot,jdbcType=CHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.booksales.model.User">
    update bsuser
    <set>
      <if test="username != null">
        UserName = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        Password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="credit != null">
        Credit = #{credit,jdbcType=INTEGER},
      </if>
      <if test="email != null">
        Email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="isroot != null">
        IsRoot = #{isroot,jdbcType=CHAR},
      </if>
    </set>
    where UserId = #{userid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.booksales.model.User">
    update bsuser
    set UserName = #{username,jdbcType=VARCHAR},
      Password = #{password,jdbcType=VARCHAR},
      Credit = #{credit,jdbcType=INTEGER},
      Email = #{email,jdbcType=VARCHAR},
      IsRoot = #{isroot,jdbcType=CHAR}
    where UserId = #{userid,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.booksales.model.User">
    <id column="UserId" jdbcType="INTEGER" property="userid" />
    <result column="UserName" jdbcType="VARCHAR" property="username" />
    <result column="Password" jdbcType="VARCHAR" property="password" />
    <result column="Credit" jdbcType="INTEGER" property="credit" />
    <result column="Email" jdbcType="VARCHAR" property="email" />
    <result column="IsRoot" jdbcType="CHAR" property="isroot" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from bsuser
    where UserId = #{userid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.booksales.model.User">
    insert into bsuser (UserId, UserName, Password, 
      Credit, Email, IsRoot)
    values (#{userid,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{credit,jdbcType=INTEGER}, #{email,jdbcType=VARCHAR}, #{isroot,jdbcType=CHAR})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.booksales.model.User">
    update bsuser
    set UserName = #{username,jdbcType=VARCHAR},
      Password = #{password,jdbcType=VARCHAR},
      Credit = #{credit,jdbcType=INTEGER},
      Email = #{email,jdbcType=VARCHAR},
      IsRoot = #{isroot,jdbcType=CHAR}
    where UserId = #{userid,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select UserId, UserName, Password, Credit, Email, IsRoot
    from bsuser
    where UserId = #{userid,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select UserId, UserName, Password, Credit, Email, IsRoot
    from bsuser
  </select>
</mapper>