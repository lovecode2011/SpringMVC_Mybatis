<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.booksales.dao.UserMapper" >

	<!-- 定义结果集 -->
  <resultMap id="BaseResultMap" type="com.booksales.model.User" >
    <id column="UserId" property="userid" jdbcType="INTEGER" />
    <result column="UserName" property="username" jdbcType="VARCHAR" />
    <result column="Password" property="password" jdbcType="VARCHAR" />
    <result column="Credit" property="credit" jdbcType="INTEGER" />
    <result column="Email" property="email" jdbcType="VARCHAR" />
    <result column="IsRoot" property="isroot" jdbcType="CHAR" />
  </resultMap>
  
  
  <!-- 根据用户id 删除用户 -->
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from bsuser
    where UserId = #{userid,jdbcType=INTEGER}
  </delete>
  
  <!-- 插入用户    User-->
  <insert id="insert" parameterType="com.booksales.model.User" >
    <selectKey resultType="java.lang.Integer" keyProperty="userid" order="BEFORE" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into bsuser (UserId, UserName, Password, 
      Credit, Email, IsRoot)
    values (#{userid,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{credit,jdbcType=INTEGER}, #{email,jdbcType=VARCHAR}, #{isroot,jdbcType=CHAR})
  </insert>
  
  <!-- 插入用户    User-->
  <insert id="insert2" parameterType="com.booksales.model.User" >
    <selectKey resultType="java.lang.Integer" keyProperty="userid" order="BEFORE" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into bsuser (UserName, Password, 
      Email)
    values (#{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
     #{email,jdbcType=VARCHAR})
  </insert>
  
  
  <!-- 根据用户id 更新用户信息 -->
  <update id="updateByPrimaryKey" parameterType="com.booksales.model.User" >
    update bsuser
    set UserName = #{username,jdbcType=VARCHAR},
      Password = #{password,jdbcType=VARCHAR},
      Credit = #{credit,jdbcType=INTEGER},
      Email = #{email,jdbcType=VARCHAR},
      IsRoot = #{isroot,jdbcType=CHAR}
    where UserId = #{userid,jdbcType=INTEGER}
  </update>
  
  
  	<!-- 根据用户id 查询用户 -->
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select UserId, UserName, Password, Credit, Email, IsRoot
    from bsuser
    where UserId = #{userid,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    select UserId, UserName, Password, Credit, Email, IsRoot
    from bsuser
  </select>
  
  <!-- 根据用户邮箱 查询密码登录  -->
  <select id="loginSelectPassword" resultMap="BaseResultMap" parameterType="java.lang.String">
  	select UserId, UserName, Password, Credit, Email, IsRoot
    from bsuser where Email =#{email,jdbcType=VARCHAR}
  
  </select>
</mapper>